

import numpy as np
import random
import math
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.stats as ss
from matplotlib import pyplot
from statsmodels.graphics.tsaplots import plot_acf
from statsmodels.graphics.tsaplots import plot_pacf
from google.colab import files
import scipy.stats
import time
from scipy.stats import multivariate_normal

!pip install '/content/pytwalk-1.6.0 (4).tar.gz'

import pytwalk as pt

sigma_bivariate = np.array([[1, -0.85], [-0.85, 1]])
sigma_bivariate_inv = np.linalg.inv(sigma_bivariate)

def U(q):
    return (1/2) * q.dot(sigma_bivariate_inv).dot(q.T)
A=pt.pytwalk( n=2, U=U)

np.random.seed(0)
random.seed(0)
t0 = time.time()
A.Run( T=30*35-1, x0=-7*np.ones(2), xp0=-6.5*np.ones(2))
t1 = time.time()
print("--- %s seconds ---" % (t1- t0))

A.Ana()
AA=A.Output
samples = AA[:, :-1]

simulations2=samples
simulation2= simulations2[np.arange(0,len(simulations2),35)]
len(simulation2)

x, y = np.mgrid[-8.3:3.8:.2, -8.3:3.8:.2]
pos = np.dstack((x, y))
rv = multivariate_normal([0, 0], [[1, -0.85], [-0.85, 1]])
fig2 = plt.figure()
ax2 = fig2.add_subplot(111)
ax2.contourf(x, y, rv.pdf(pos), 10)
plt.plot(simulation2[:,0], simulation2[:,1], '.', c='red')
plt.plot(simulation2[:,0], simulation2[:,1], "r")
ax2.set_yticklabels([])
plt.xlabel(r'$q_{1}$')
#plt.gca().axes.yaxis.set_ticklabels([])

#plt.savefig("biv_twalk.png",bbox_inches='tight',dpi=300)
#files.download("biv_twalk.png")
